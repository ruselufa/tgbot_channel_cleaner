version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: tgbot_moderator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c 'max_connections=1000' -c 'shared_buffers=128MB' -c 'log_min_messages=debug1' -c 'listen_addresses=*' -c 'log_connections=on'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tgbot_moderator"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass tgbot_redis_password --bind 0.0.0.0
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tgbot_moderator
      - REDIS_URL=redis://redis:6379/0
      - REDIS_PASSWORD=tgbot_redis_password
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: 